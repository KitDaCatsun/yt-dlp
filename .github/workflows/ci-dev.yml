name: Github CI - Development

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  setup-and-build:
    name: Setup and build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: 📁 Check out the repository
        uses: actions/checkout@v4.2.2

      - name: 📦 Cache Rust toolchain
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rust-toolchain-

      - name: 🛠️ Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: ✅ Check with Clippy linter
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: 💄 Format code with Cargo formatter
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: 🦀 Install Rust dependencies and build library
        uses: actions-rs/cargo@v1
        with:
          command: build

  tools-analysis:
    name: Tools analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read

    steps:
      - name: 📁 Check out the repository
        uses: actions/checkout@v4.2.2

      - name: 🔍 Scan with SonarCloud
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 🔍 Scan with Scorecard
        uses: ossf/scorecard-action@v2.4.0
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: 📦 Upload Scorecard scan results artifact
        uses: actions/upload-artifact@4.4.3
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: 📦 Upload SonarCloud scan results to GitHub dashboard
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif